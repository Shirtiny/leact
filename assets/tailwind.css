/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-bold: 700;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .ui-menu {
    display: flex;
    width: fit-content;
    flex-direction: column;
    flex-wrap: wrap;
    padding: calc(0.25rem * 2);
    --ui-menu-active-fg: var(--color-neutral-content);
    --ui-menu-active-bg: var(--color-neutral);
    font-size: 0.875rem;
    :where(li ul) {
      position: relative;
      margin-inline-start: calc(0.25rem * 4);
      padding-inline-start: calc(0.25rem * 2);
      white-space: nowrap;
      &:before {
        position: absolute;
        inset-inline-start: calc(0.25rem * 0);
        top: calc(0.25rem * 3);
        bottom: calc(0.25rem * 3);
        background-color: var(--color-base-content);
        opacity: 10%;
        width: var(--border);
        content: "";
      }
    }
    :where(li > .ui-menu-dropdown:not(.ui-menu-dropdown-show)) {
      display: none;
    }
    :where(li:not(.ui-menu-title) > *:not(ul, details, .ui-menu-title, .ui-btn)), :where(li:not(.ui-menu-title) > details > summary:not(.ui-menu-title)) {
      display: grid;
      grid-auto-flow: column;
      align-content: flex-start;
      align-items: center;
      gap: calc(0.25rem * 2);
      border-radius: var(--radius-field);
      padding-inline: calc(0.25rem * 3);
      padding-block: calc(0.25rem * 1.5);
      text-align: start;
      transition-property: color, background-color, box-shadow;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
      grid-auto-columns: minmax(auto, max-content) auto max-content;
      text-wrap: balance;
      user-select: none;
    }
    :where(li > details > summary) {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      &::-webkit-details-marker {
        display: none;
      }
    }
    :where(li > details > summary), :where(li > .ui-menu-dropdown-toggle) {
      &:after {
        justify-self: flex-end;
        display: block;
        height: 0.375rem;
        width: 0.375rem;
        rotate: -135deg;
        translate: 0 -1px;
        transition-property: rotate, translate;
        transition-duration: 0.2s;
        content: "";
        transform-origin: 50% 50%;
        box-shadow: 2px 2px inset;
        pointer-events: none;
      }
    }
    :where(li > details[open] > summary):after, :where(li > .ui-menu-dropdown-toggle.ui-menu-dropdown-show):after {
      rotate: 45deg;
      translate: 0 1px;
    }
    :where( li:not(.ui-menu-title, .ui-disabled) > *:not(ul, details, .ui-menu-title), li:not(.ui-menu-title, .ui-disabled) > details > summary:not(.ui-menu-title) ):not(.ui-menu-active, :active, .ui-btn) {
      &.ui-menu-focus, &:focus-visible {
        cursor: pointer;
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        color: var(--color-base-content);
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
      }
    }
    :where( li:not(.ui-menu-title, .ui-disabled) > *:not(ul, details, .ui-menu-title):not(.ui-menu-active, :active, .ui-btn):hover, li:not(.ui-menu-title, .ui-disabled) > details > summary:not(.ui-menu-title):not(.ui-menu-active, :active, .ui-btn):hover ) {
      cursor: pointer;
      background-color: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
      }
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
      box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
    }
    :where(li:empty) {
      background-color: var(--color-base-content);
      opacity: 10%;
      margin: 0.5rem 1rem;
      height: 1px;
    }
    :where(li) {
      position: relative;
      display: flex;
      flex-shrink: 0;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: stretch;
      .ui-badge {
        justify-self: flex-end;
      }
      & > *:not(ul, .ui-menu-title, details, .ui-btn):active, & > *:not(ul, .ui-menu-title, details, .ui-btn).ui-menu-active, & > details > summary:active {
        --tw-outline-style: none;
        outline-style: none;
        @media (forced-colors: active) {
          outline: 2px solid transparent;
          outline-offset: 2px;
        }
        color: var(--ui-menu-active-fg);
        background-color: var(--ui-menu-active-bg);
        background-size: auto, calc(var(--noise) * 100%);
        background-image: none, var(--ui-fx-noise);
        &:not(&:active) {
          box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--ui-menu-active-bg);
        }
      }
      &.ui-menu-disabled {
        pointer-events: none;
        color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
        }
      }
    }
    .ui-dropdown:focus-within {
      .ui-menu-dropdown-toggle:after {
        rotate: 45deg;
        translate: 0 1px;
      }
    }
    .ui-dropdown-content {
      margin-top: calc(0.25rem * 2);
      padding: calc(0.25rem * 2);
      &:before {
        display: none;
      }
    }
  }
  .ui-dropdown {
    position: relative;
    display: inline-block;
    position-area: var(--ui-anchor-v, bottom) var(--ui-anchor-h, span-right);
    & > *:not(summary):focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    .ui-dropdown-content {
      position: absolute;
    }
    &:not(details, .ui-dropdown-open, .ui-dropdown-hover:hover, :focus-within) {
      .ui-dropdown-content {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
    &[popover], .ui-dropdown-content {
      z-index: 999;
      animation: dropdown 0.2s;
      transition-property: opacity, scale, display;
      transition-behavior: allow-discrete;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @starting-style {
      &[popover], .ui-dropdown-content {
        scale: 95%;
        opacity: 0;
      }
    }
    &.ui-dropdown-open, &:not(.ui-dropdown-hover):focus, &:focus-within {
       > [tabindex]:first-child {
        pointer-events: none;
      }
      .ui-dropdown-content {
        opacity: 100%;
      }
    }
    &.ui-dropdown-hover:hover {
      .ui-dropdown-content {
        opacity: 100%;
        scale: 100%;
      }
    }
    &:is(details) {
      summary {
        &::-webkit-details-marker {
          display: none;
        }
      }
    }
    &.ui-dropdown-open, &:focus, &:focus-within {
      .ui-dropdown-content {
        scale: 100%;
      }
    }
    &:where([popover]) {
      background: #0000;
    }
    &[popover] {
      position: fixed;
      color: inherit;
      @supports not (position-area: bottom) {
        margin: auto;
        &.ui-dropdown-open:not(:popover-open) {
          display: none;
          transform-origin: top;
          opacity: 0%;
          scale: 95%;
        }
        &::backdrop {
          background-color: color-mix(in oklab, #000 30%, #0000);
        }
      }
      &:not(.ui-dropdown-open, :popover-open) {
        display: none;
        transform-origin: top;
        opacity: 0%;
        scale: 95%;
      }
    }
  }
  .ui-btn {
    :where(&) {
      width: unset;
    }
    display: inline-flex;
    flex-shrink: 0;
    cursor: pointer;
    flex-wrap: nowrap;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 1.5);
    text-align: center;
    vertical-align: middle;
    outline-offset: 2px;
    webkit-user-select: none;
    user-select: none;
    padding-inline: var(--ui-btn-p);
    color: var(--ui-btn-fg);
    --tw-prose-links: var(--ui-btn-fg);
    height: var(--ui-size);
    font-size: var(--ui-fontsize, 0.875rem);
    font-weight: 600;
    outline-color: var(--ui-btn-color, var(--color-base-content));
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    transition-duration: 0.2s;
    border-start-start-radius: var(--ui-join-ss, var(--radius-field));
    border-start-end-radius: var(--ui-join-se, var(--radius-field));
    border-end-start-radius: var(--ui-join-es, var(--radius-field));
    border-end-end-radius: var(--ui-join-ee, var(--radius-field));
    background-color: var(--ui-btn-bg);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--ui-btn-noise);
    border-width: var(--border);
    border-style: solid;
    border-color: var(--ui-btn-border);
    text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
    touch-action: manipulation;
    box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--ui-btn-shadow);
    --ui-size: calc(var(--size-field, 0.25rem) * 10);
    --ui-btn-bg: var(--ui-btn-color, var(--color-base-200));
    --ui-btn-fg: var(--color-base-content);
    --ui-btn-p: 1rem;
    --ui-btn-border: var(--ui-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-btn-border: color-mix(in oklab, var(--ui-btn-bg), #000 calc(var(--depth) * 5%));
    }
    --ui-btn-shadow: 0 3px 2px -2px var(--ui-btn-bg),
    0 4px 3px -2px var(--ui-btn-bg);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--ui-btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--ui-btn-bg) calc(var(--depth) * 30%), #0000);
    }
    --ui-btn-noise: var(--ui-fx-noise);
    .ui-prose & {
      text-decoration-line: none;
    }
    @media (hover: hover) {
      &:hover {
        --ui-btn-bg: var(--ui-btn-color, var(--color-base-200));
        @supports (color: color-mix(in lab, red, red)) {
          --ui-btn-bg: color-mix(in oklab, var(--ui-btn-color, var(--color-base-200)), #000 7%);
        }
      }
    }
    &:focus-visible {
      outline-width: 2px;
      outline-style: solid;
      isolation: isolate;
    }
    &:active:not(.ui-btn-active) {
      translate: 0 0.5px;
      --ui-btn-bg: var(--ui-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --ui-btn-bg: color-mix(in oklab, var(--ui-btn-color, var(--color-base-200)), #000 5%);
      }
      --ui-btn-border: var(--ui-btn-color, var(--color-base-200));
      @supports (color: color-mix(in lab, red, red)) {
        --ui-btn-border: color-mix(in oklab, var(--ui-btn-color, var(--color-base-200)), #000 7%);
      }
      --ui-btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
    }
    &:is(:disabled, [disabled], .ui-btn-disabled) {
      &:not(.ui-btn-link, .ui-btn-ghost) {
        background-color: var(--color-base-content);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
        }
        box-shadow: none;
      }
      pointer-events: none;
      --ui-btn-border: #0000;
      --ui-btn-noise: none;
      --ui-btn-fg: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --ui-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
      }
      @media (hover: hover) {
        &:hover {
          pointer-events: none;
          background-color: var(--color-neutral);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
          }
          --ui-btn-border: #0000;
          --ui-btn-fg: var(--color-base-content);
          @supports (color: color-mix(in lab, red, red)) {
            --ui-btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
          }
        }
      }
    }
    &:is(input[type="checkbox"], input[type="radio"]) {
      appearance: none;
      &::after {
        content: attr(aria-label);
      }
    }
    &:where(input:checked:not(.ui-filter .ui-btn)) {
      --ui-btn-color: var(--color-primary);
      --ui-btn-fg: var(--color-primary-content);
      isolation: isolate;
    }
  }
  .visible {
    visibility: visible;
  }
  .ui-indicator {
    position: relative;
    display: inline-flex;
    width: max-content;
    :where(.ui-indicator-item) {
      z-index: 1;
      position: absolute;
      white-space: nowrap;
      top: var(--ui-inidicator-t, 0);
      bottom: var(--ui-inidicator-b, auto);
      left: var(--ui-inidicator-s, auto);
      right: var(--ui-inidicator-e, 0);
      translate: var(--ui-inidicator-x, 50%) var(--ui-indicator-y, -50%);
    }
  }
  .ui-steps {
    display: inline-grid;
    grid-auto-flow: column;
    overflow: hidden;
    overflow-x: auto;
    counter-reset: step;
    grid-auto-columns: 1fr;
    .ui-step {
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      grid-template-columns: auto;
      grid-template-rows: repeat(2, minmax(0, 1fr));
      grid-template-rows: 40px 1fr;
      place-items: center;
      text-align: center;
      min-width: 4rem;
      --ui-step-bg: var(--color-base-300);
      --ui-step-fg: var(--color-base-content);
      &:before {
        top: calc(0.25rem * 0);
        grid-column-start: 1;
        grid-row-start: 1;
        height: calc(0.25rem * 2);
        width: 100%;
        border: 1px solid;
        color: var(--ui-step-bg);
        background-color: var(--ui-step-bg);
        --tw-content: "";
        content: var(--tw-content);
        margin-inline-start: -100%;
      }
      > .ui-step-icon, &:not(:has(.ui-step-icon)):after {
        content: counter(step);
        counter-increment: step;
        z-index: 1;
        color: var(--ui-step-fg);
        background-color: var(--ui-step-bg);
        border: 1px solid var(--ui-step-bg);
        position: relative;
        grid-column-start: 1;
        grid-row-start: 1;
        display: grid;
        height: calc(0.25rem * 8);
        width: calc(0.25rem * 8);
        place-items: center;
        place-self: center;
        border-radius: calc(infinity * 1px);
      }
      &:first-child:before {
        content: none;
      }
      &[data-content]:after {
        content: attr(data-content);
      }
    }
    .ui-step-neutral {
      + .ui-step-neutral:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-neutral);
        --ui-step-fg: var(--color-neutral-content);
      }
    }
    .ui-step-primary {
      + .ui-step-primary:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-primary);
        --ui-step-fg: var(--color-primary-content);
      }
    }
    .ui-step-secondary {
      + .ui-step-secondary:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-secondary);
        --ui-step-fg: var(--color-secondary-content);
      }
    }
    .ui-step-accent {
      + .ui-step-accent:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-accent);
        --ui-step-fg: var(--color-accent-content);
      }
    }
    .ui-step-info {
      + .ui-step-info:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-info);
        --ui-step-fg: var(--color-info-content);
      }
    }
    .ui-step-success {
      + .ui-step-success:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-success);
        --ui-step-fg: var(--color-success-content);
      }
    }
    .ui-step-warning {
      + .ui-step-warning:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-warning);
        --ui-step-fg: var(--color-warning-content);
      }
    }
    .ui-step-error {
      + .ui-step-error:before, &:after, > .ui-step-icon {
        --ui-step-bg: var(--color-error);
        --ui-step-fg: var(--color-error-content);
      }
    }
  }
  .ui-swap {
    position: relative;
    display: inline-grid;
    cursor: pointer;
    place-content: center;
    vertical-align: middle;
    webkit-user-select: none;
    user-select: none;
    input {
      appearance: none;
      border: none;
    }
     > * {
      grid-column-start: 1;
      grid-row-start: 1;
      transition-property: transform, rotate, opacity;
      transition-duration: 0.2s;
      transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
    .ui-swap-on, .ui-swap-indeterminate, input:indeterminate ~ .ui-swap-on {
      opacity: 0%;
    }
    input:is(:checked, :indeterminate) {
      & ~ .ui-swap-off {
        opacity: 0%;
      }
    }
    input:checked ~ .ui-swap-on, input:indeterminate ~ .ui-swap-indeterminate {
      opacity: 100%;
      backface-visibility: visible;
    }
  }
  .ui-avatar {
    position: relative;
    display: inline-flex;
    vertical-align: middle;
    & > div {
      display: block;
      aspect-ratio: 1 / 1;
      overflow: hidden;
    }
    img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .ui-dropdown-right {
    --ui-anchor-h: right;
    --ui-anchor-v: span-bottom;
    .ui-dropdown-content {
      inset-inline-start: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: left;
    }
  }
  .ui-dropdown-left {
    --ui-anchor-h: left;
    --ui-anchor-v: span-bottom;
    .ui-dropdown-content {
      inset-inline-end: 100%;
      top: calc(0.25rem * 0);
      bottom: auto;
      transform-origin: right;
    }
  }
  .ui-dropdown-center {
    --ui-anchor-h: center;
    :where(.ui-dropdown-content) {
      inset-inline-end: calc(1/2 * 100%);
      translate: 50% 0;
      [dir="rtl"] & {
        translate: -50% 0;
      }
    }
    &.ui-dropdown-left {
      --ui-anchor-h: left;
      --ui-anchor-v: center;
      .ui-dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
    &.ui-dropdown-right {
      --ui-anchor-h: right;
      --ui-anchor-v: center;
      .ui-dropdown-content {
        top: auto;
        bottom: calc(1/2 * 100%);
        translate: 0 50%;
      }
    }
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .z-1 {
    z-index: 1;
  }
  .ui-filter {
    display: flex;
    flex-wrap: wrap;
    input[type="radio"] {
      width: auto;
    }
    input {
      overflow: hidden;
      opacity: 100%;
      scale: 1;
      transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
      &:not(:last-child) {
        margin-inline-end: calc(0.25rem * 1);
      }
      &.ui-filter-reset {
        aspect-ratio: 1 / 1;
        &::after {
          content: "×";
        }
      }
    }
    &:not(:has(input:checked:not(.ui-filter-reset))) {
      .ui-filter-reset, input[type="reset"] {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
    &:has(input:checked:not(.ui-filter-reset)) {
      input:not(:checked, .ui-filter-reset, input[type="reset"]) {
        scale: 0;
        border-width: 0;
        margin-inline: calc(0.25rem * 0);
        width: calc(0.25rem * 0);
        padding-inline: calc(0.25rem * 0);
        opacity: 0%;
      }
    }
  }
  .ui-steps-vertical {
    grid-auto-rows: 1fr;
    grid-auto-flow: row;
    .ui-step {
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      grid-template-columns: 40px 1fr;
      grid-template-rows: repeat(1, minmax(0, 1fr));
      grid-template-rows: auto;
      gap: 0.5rem;
      min-height: 4rem;
      justify-items: start;
      &:before {
        height: 100%;
        width: calc(0.25rem * 2);
        translate: -50% -50%;
        margin-inline-start: 50%;
      }
      [dir="rtl"] &:before {
        translate: 50% -50%;
      }
    }
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .ui-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: calc(0.25rem * 2);
    border-radius: var(--radius-selector);
    vertical-align: middle;
    color: var(--ui-badge-fg);
    border: var(--border) solid var(--ui-badge-color, var(--color-base-200));
    font-size: 0.875rem;
    width: fit-content;
    padding-inline: calc(0.25rem * 3 - var(--border));
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--ui-fx-noise);
    background-color: var(--ui-badge-bg);
    --ui-badge-bg: var(--ui-badge-color, var(--color-base-100));
    --ui-badge-fg: var(--color-base-content);
    --ui-size: calc(var(--size-selector, 0.25rem) * 6);
    height: var(--ui-size);
    &.ui-badge-outline {
      --ui-badge-fg: var(--ui-badge-color);
      --ui-badge-bg: #0000;
      background-image: none;
      border-color: currentColor;
    }
    &.ui-badge-dash {
      --ui-badge-fg: var(--ui-badge-color);
      --ui-badge-bg: #0000;
      background-image: none;
      border-color: currentColor;
      border-style: dashed;
    }
    &.ui-badge-soft {
      color: var(--ui-badge-color, var(--color-base-content));
      background-color: var(--ui-badge-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix( in oklab, var(--ui-badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
      }
      border-color: var(--ui-badge-color, var(--color-base-content));
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix( in oklab, var(--ui-badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
      }
      background-image: none;
    }
  }
  .ui-navbar {
    display: flex;
    width: 100%;
    align-items: center;
    padding: 0.5rem;
    min-height: 4rem;
  }
  .ui-chat {
    display: grid;
    column-gap: calc(0.25rem * 3);
    padding-block: calc(0.25rem * 1);
  }
  .ui-prose {
    :root & {
      --tw-prose-body: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      --tw-prose-headings: var(--color-base-content);
      --tw-prose-lead: var(--color-base-content);
      --tw-prose-links: var(--color-base-content);
      --tw-prose-bold: var(--color-base-content);
      --tw-prose-counters: var(--color-base-content);
      --tw-prose-bullets: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-hr: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-quotes: var(--color-base-content);
      --tw-prose-quote-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-captions: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-code: var(--color-base-content);
      --tw-prose-pre-code: var(--color-neutral-content);
      --tw-prose-pre-bg: var(--color-neutral);
      --tw-prose-th-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
      }
      --tw-prose-td-borders: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
      }
      --tw-prose-kbd: var(--color-base-content);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
      }
      :where(code):not(pre > code) {
        background-color: var(--color-base-200);
        border-radius: var(--radius-selector);
        border: var(--border) solid var(--color-base-300);
        padding-inline: 0.5em;
        font-weight: inherit;
        &:before, &:after {
          display: none;
        }
      }
    }
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .inline-block {
    display: inline-block;
  }
  .table {
    display: table;
  }
  .ui-btn-circle {
    border-radius: calc(infinity * 1px);
    padding-inline: calc(0.25rem * 0);
    width: var(--ui-size);
    height: var(--ui-size);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-full {
    height: 100%;
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-full {
    width: 100%;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .ui-swap-rotate {
    .ui-swap-on, input:indeterminate ~ .ui-swap-on {
      rotate: 45deg;
    }
    input:is(:checked, :indeterminate) ~ .ui-swap-on, &.ui-swap-active .ui-swap-on {
      rotate: 0deg;
    }
    input:is(:checked, :indeterminate) ~ .ui-swap-off, &.ui-swap-active .ui-swap-off {
      rotate: calc(45deg * -1);
    }
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .rounded-box {
    border-radius: var(--radius-box);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .fill-current {
    fill: currentcolor;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .ui-badge-sm {
    --ui-size: calc(var(--size-selector, 0.25rem) * 5);
    font-size: 0.75rem;
    padding-inline: calc(0.25rem * 2.5 - var(--border));
  }
  .ui-badge-xs {
    --ui-size: calc(var(--size-selector, 0.25rem) * 4);
    font-size: 0.625rem;
    padding-inline: calc(0.25rem * 2 - var(--border));
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .ui-swap-active {
    .ui-swap-off {
      opacity: 0%;
    }
    .ui-swap-on {
      opacity: 100%;
    }
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .ui-btn-ghost {
    &:not(.ui-btn-active, :hover, :active:focus, :focus-visible) {
      --ui-btn-shadow: "";
      --ui-btn-bg: #0000;
      --ui-btn-border: #0000;
      --ui-btn-noise: none;
      &:not(:disabled, [disabled], .ui-btn-disabled) {
        outline-color: currentColor;
        --ui-btn-fg: currentColor;
      }
    }
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .ui-badge-primary {
    --ui-badge-color: var(--color-primary);
    --ui-badge-fg: var(--color-primary-content);
  }
  .\@sm\:ui-steps-horizontal {
    @container (width >= 24rem) {
      grid-auto-columns: 1fr;
      display: inline-grid;
      grid-auto-flow: column;
      overflow: hidden;
      overflow-x: auto;
      .ui-step {
        display: grid;
        grid-template-columns: repeat(1, minmax(0, 1fr));
        grid-template-columns: auto;
        grid-template-rows: repeat(2, minmax(0, 1fr));
        grid-template-rows: 40px 1fr;
        place-items: center;
        text-align: center;
        min-width: 4rem;
        &:before {
          height: calc(0.25rem * 2);
          width: 100%;
          translate: 0;
          content: "";
          margin-inline-start: -100%;
        }
        [dir="rtl"] &:before {
          translate: 0;
        }
      }
    }
  }
}
@layer base {
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
}
@layer base {
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=cupcake]:checked),[data-theme=cupcake] {
    color-scheme: light;
    --color-base-100: oklch(97.788% 0.004 56.375);
    --color-base-200: oklch(93.982% 0.007 61.449);
    --color-base-300: oklch(91.586% 0.006 53.44);
    --color-base-content: oklch(23.574% 0.066 313.189);
    --color-primary: oklch(85% 0.138 181.071);
    --color-primary-content: oklch(43% 0.078 188.216);
    --color-secondary: oklch(89% 0.061 343.231);
    --color-secondary-content: oklch(45% 0.187 3.815);
    --color-accent: oklch(90% 0.076 70.697);
    --color-accent-content: oklch(47% 0.157 37.304);
    --color-neutral: oklch(27% 0.006 286.033);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(68% 0.169 237.323);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(69% 0.17 162.48);
    --color-success-content: oklch(26% 0.051 172.552);
    --color-warning: oklch(79% 0.184 86.047);
    --color-warning-content: oklch(28% 0.066 53.813);
    --color-error: oklch(64% 0.246 16.439);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 1rem;
    --radius-field: 2rem;
    --radius-box: 1rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 2px;
    --depth: 1;
    --noise: 0;
  }
}
@layer base {
  :root:has(input.theme-controller[value=business]:checked),[data-theme=business] {
    color-scheme: dark;
    --color-base-100: oklch(24.353% 0 0);
    --color-base-200: oklch(22.648% 0 0);
    --color-base-300: oklch(20.944% 0 0);
    --color-base-content: oklch(84.87% 0 0);
    --color-primary: oklch(41.703% 0.099 251.473);
    --color-primary-content: oklch(88.34% 0.019 251.473);
    --color-secondary: oklch(64.092% 0.027 229.389);
    --color-secondary-content: oklch(12.818% 0.005 229.389);
    --color-accent: oklch(67.271% 0.167 35.791);
    --color-accent-content: oklch(13.454% 0.033 35.791);
    --color-neutral: oklch(27.441% 0.013 253.041);
    --color-neutral-content: oklch(85.488% 0.002 253.041);
    --color-info: oklch(62.616% 0.143 240.033);
    --color-info-content: oklch(12.523% 0.028 240.033);
    --color-success: oklch(70.226% 0.094 156.596);
    --color-success-content: oklch(14.045% 0.018 156.596);
    --color-warning: oklch(77.482% 0.115 81.519);
    --color-warning-content: oklch(15.496% 0.023 81.519);
    --color-error: oklch(51.61% 0.146 29.674);
    --color-error-content: oklch(90.322% 0.029 29.674);
    --radius-selector: 0rem;
    --radius-field: 0.25rem;
    --radius-box: 0.25rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 0;
    --noise: 0;
  }
}
@layer base {
  :root:has( .ui-modal-open, .ui-modal[open], .ui-modal:target, .ui-modal-toggle:checked, .ui-drawer:not([class*="drawer-open"]) > .ui-drawer-toggle:checked ) {
    overflow: hidden;
  }
}
@layer base {
  :root, [data-theme] {
    background-color: var(--ui-root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
}
@layer base {
  :root {
    scrollbar-color: currentColor #0000;
    @supports (color: color-mix(in lab, red, red)) {
      scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
    }
  }
}
@layer base {
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
}
@layer base {
  :where( :root:has( .ui-modal-open, .ui-modal[open], .ui-modal:target, .ui-modal-toggle:checked, .ui-drawer:not(.ui-drawer-open) > .ui-drawer-toggle:checked ) ) {
    scrollbar-gutter: stable;
    background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
    --ui-root-bg: var(--color-base-100);
    @supports (color: color-mix(in lab, red, red)) {
      --ui-root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
    }
  }
  :where(.ui-modal[open], .ui-modal-open, .ui-modal-toggle:checked + .ui-modal):not(.ui-modal-start, .ui-modal-end) {
    scrollbar-gutter: stable;
  }
}
@layer base {
  :root {
    --ui-fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  .ui-chat {
    --ui-mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
  }
}
@keyframes dropdown {
  0% {
    opacity: 0;
  }
}
@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}
@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}
@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}
@keyframes radio {
  0% {
    padding: 5px;
  }
  50% {
    padding: 3px;
  }
}
@keyframes skeleton {
  0% {
    background-position: 150%;
  }
  100% {
    background-position: -50%;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
    }
  }
}
